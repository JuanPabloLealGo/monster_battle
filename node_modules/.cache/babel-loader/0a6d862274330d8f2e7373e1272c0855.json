{"ast":null,"code":"import { API_URL } from '../../constants/env';\n\nconst getAll = async () => await fetch(`${API_URL}/monsters`).then(response => response.json());\n\nconst getResult = async payload => await fetch(`${API_URL}/battle`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(payload)\n});\n\nexport const MonsterService = {\n  getAll,\n  getResult\n};","map":{"version":3,"names":["API_URL","getAll","fetch","then","response","json","getResult","payload","method","headers","body","JSON","stringify","MonsterService"],"sources":["/Users/fusion/Development/challenges/assessment-cc-react-sr-01/src/reducers/monsters/monsters.service.ts"],"sourcesContent":["import { API_URL } from '../../constants/env';\nimport { MonsterBattleResult } from '../../models/interfaces/monster-battle-result.interface';\nimport { Monster } from '../../models/interfaces/monster.interface';\n\nconst getAll = async (): Promise<Monster[]> =>\n  await fetch(`${API_URL}/monsters`).then((response) => response.json());\n\nconst getResult = async (payload: MonsterBattleResult): any =>\n  await fetch(\n    `${API_URL}/battle`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload)\n    }\n  );\n\nexport const MonsterService = {\n  getAll,\n  getResult,\n};\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qBAAxB;;AAIA,MAAMC,MAAM,GAAG,YACb,MAAMC,KAAK,CAAE,GAAEF,OAAQ,WAAZ,CAAL,CAA6BG,IAA7B,CAAmCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAhD,CADR;;AAGA,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAChB,MAAML,KAAK,CACR,GAAEF,OAAQ,SADF,EAET;EACEQ,MAAM,EAAE,MADV;EAEEC,OAAO,EAAE;IACP,gBAAgB;EADT,CAFX;EAKEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AALR,CAFS,CADb;;AAYA,OAAO,MAAMM,cAAc,GAAG;EAC5BZ,MAD4B;EAE5BK;AAF4B,CAAvB"},"metadata":{},"sourceType":"module"}