{"ast":null,"code":"var _jsxFileName = \"/Users/fusion/Development/challenges/assessment-cc-react-sr-01/src/pages/battle-of-monsters/BattleOfMonsters.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport { MonsterBattleCard } from \"../../components/monster-battle-card/MonsterBattleCard\";\nimport { MonstersList } from \"../../components/monsters-list/MonstersList\";\nimport { Title } from \"../../components/title/Title\";\nimport { fetchBattleResult, fetchMonstersData, setComputersMonster } from \"../../reducers/monsters/monsters.actions\";\nimport { selectComputersMonster, selectMonsters, selectSelectedMonster } from \"../../reducers/monsters/monsters.selectors\";\nimport { BattleSection, PageContainer, StartBattleButton } from \"./BattleOfMonsters.styled\";\n/*\n- Create the monster's card component\n- Implement a logic to select the computer's monster (random and differently to player's monter)\n- Enable the button after after monsters are selected and implement the api call to get the result \n- Display the result\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BattleOfMonsters = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const monsters = useAppSelector(selectMonsters);\n  const selectedMonster = useAppSelector(selectSelectedMonster);\n  const computerMonster = useAppSelector(selectComputersMonster);\n  useEffect(() => {\n    dispatch(fetchMonstersData());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(setComputersMonster());\n  }, [dispatch, selectedMonster]);\n\n  const handleStartBattleClick = () => {\n    if (selectedMonster && computerMonster) {\n      const payload = {\n        monster1Id: selectedMonster.id,\n        monster2Id: computerMonster.id\n      };\n      dispatch(fetchBattleResult(payload));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Battle of Monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MonstersList, {\n      monsters: monsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BattleSection, {\n      children: [/*#__PURE__*/_jsxDEV(MonsterBattleCard, {\n        monster: selectedMonster,\n        title: (selectedMonster === null || selectedMonster === void 0 ? void 0 : selectedMonster.name) || \"Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StartBattleButton, {\n        \"data-testid\": \"start-battle-button\",\n        disabled: !selectedMonster && !computerMonster,\n        onClick: handleStartBattleClick,\n        children: \"Start Battle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MonsterBattleCard, {\n        monster: computerMonster,\n        title: \"Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BattleOfMonsters, \"p635BEd30FoCVLfMjbK2lcHB2fY=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector, useAppSelector];\n});\n\n_c = BattleOfMonsters;\nexport { BattleOfMonsters };\n\nvar _c;\n\n$RefreshReg$(_c, \"BattleOfMonsters\");","map":{"version":3,"names":["useEffect","useAppDispatch","useAppSelector","MonsterBattleCard","MonstersList","Title","fetchBattleResult","fetchMonstersData","setComputersMonster","selectComputersMonster","selectMonsters","selectSelectedMonster","BattleSection","PageContainer","StartBattleButton","BattleOfMonsters","dispatch","monsters","selectedMonster","computerMonster","handleStartBattleClick","payload","monster1Id","id","monster2Id","name"],"sources":["/Users/fusion/Development/challenges/assessment-cc-react-sr-01/src/pages/battle-of-monsters/BattleOfMonsters.tsx"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\"\nimport { MonsterBattleCard } from \"../../components/monster-battle-card/MonsterBattleCard\"\nimport { MonstersList } from \"../../components/monsters-list/MonstersList\"\nimport { Title } from \"../../components/title/Title\"\nimport { MonsterBattlePayload } from \"../../models/interfaces/monster-battle-payload.interface\"\nimport { fetchBattleResult, fetchMonstersData, setComputersMonster } from \"../../reducers/monsters/monsters.actions\"\nimport { selectComputersMonster, selectMonsters, selectSelectedMonster } from \"../../reducers/monsters/monsters.selectors\"\nimport { BattleSection, PageContainer, StartBattleButton } from \"./BattleOfMonsters.styled\"\n\n\n/*\n- Create the monster's card component\n- Implement a logic to select the computer's monster (random and differently to player's monter)\n- Enable the button after after monsters are selected and implement the api call to get the result \n- Display the result\n*/\n\nconst BattleOfMonsters = () => {\n    const dispatch = useAppDispatch()\n\n    const monsters = useAppSelector(selectMonsters)\n    const selectedMonster = useAppSelector(selectSelectedMonster)\n    const computerMonster = useAppSelector(selectComputersMonster)\n\n    useEffect(() => {\n        dispatch(fetchMonstersData())\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(setComputersMonster())\n    }, [dispatch, selectedMonster])\n\n    const handleStartBattleClick = () => {\n        if (selectedMonster && computerMonster) {\n            const payload: MonsterBattlePayload = {\n                monster1Id: selectedMonster.id,\n                monster2Id: computerMonster.id,\n            };\n            dispatch(fetchBattleResult(payload));\n        }\n    }\n\n    return (\n        <PageContainer>\n            <Title>Battle of Monsters</Title>\n\n            <MonstersList monsters={monsters} />\n\n            <BattleSection>\n                <MonsterBattleCard monster={selectedMonster} title={selectedMonster?.name || \"Player\"} />\n                <StartBattleButton data-testid=\"start-battle-button\" disabled={!selectedMonster && !computerMonster} onClick={handleStartBattleClick}>Start Battle</StartBattleButton>\n                <MonsterBattleCard monster={computerMonster} title=\"Computer\" />\n            </BattleSection>\n        </PageContainer>\n    )\n}\n\nexport { BattleOfMonsters }"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AACA,SAASC,iBAAT,QAAkC,wDAAlC;AACA,SAASC,YAAT,QAA6B,6CAA7B;AACA,SAASC,KAAT,QAAsB,8BAAtB;AAEA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,mBAA/C,QAA0E,0CAA1E;AACA,SAASC,sBAAT,EAAiCC,cAAjC,EAAiDC,qBAAjD,QAA8E,4CAA9E;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,iBAAvC,QAAgE,2BAAhE;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC3B,MAAMC,QAAQ,GAAGf,cAAc,EAA/B;EAEA,MAAMgB,QAAQ,GAAGf,cAAc,CAACQ,cAAD,CAA/B;EACA,MAAMQ,eAAe,GAAGhB,cAAc,CAACS,qBAAD,CAAtC;EACA,MAAMQ,eAAe,GAAGjB,cAAc,CAACO,sBAAD,CAAtC;EAEAT,SAAS,CAAC,MAAM;IACZgB,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;EACH,CAFQ,EAEN,CAACS,QAAD,CAFM,CAAT;EAIAhB,SAAS,CAAC,MAAM;IACZgB,QAAQ,CAACR,mBAAmB,EAApB,CAAR;EACH,CAFQ,EAEN,CAACQ,QAAD,EAAWE,eAAX,CAFM,CAAT;;EAIA,MAAME,sBAAsB,GAAG,MAAM;IACjC,IAAIF,eAAe,IAAIC,eAAvB,EAAwC;MACpC,MAAME,OAA6B,GAAG;QAClCC,UAAU,EAAEJ,eAAe,CAACK,EADM;QAElCC,UAAU,EAAEL,eAAe,CAACI;MAFM,CAAtC;MAIAP,QAAQ,CAACV,iBAAiB,CAACe,OAAD,CAAlB,CAAR;IACH;EACJ,CARD;;EAUA,oBACI,QAAC,aAAD;IAAA,wBACI,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI,QAAC,YAAD;MAAc,QAAQ,EAAEJ;IAAxB;MAAA;MAAA;MAAA;IAAA,QAHJ,eAKI,QAAC,aAAD;MAAA,wBACI,QAAC,iBAAD;QAAmB,OAAO,EAAEC,eAA5B;QAA6C,KAAK,EAAE,CAAAA,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEO,IAAjB,KAAyB;MAA7E;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,iBAAD;QAAmB,eAAY,qBAA/B;QAAqD,QAAQ,EAAE,CAACP,eAAD,IAAoB,CAACC,eAApF;QAAqG,OAAO,EAAEC,sBAA9G;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,iBAAD;QAAmB,OAAO,EAAED,eAA5B;QAA6C,KAAK,EAAC;MAAnD;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAtCD;;GAAMJ,gB;UACed,c,EAEAC,c,EACOA,c,EACAA,c;;;KALtBa,gB;AAwCN,SAASA,gBAAT"},"metadata":{},"sourceType":"module"}